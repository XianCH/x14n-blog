(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{970:function(t,s,e){"use strict";e.r(s);var a=e(2),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1-redis常用的5种数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-redis常用的5种数据类型"}},[t._v("#")]),t._v(" 1 Redis常用的5种数据类型")]),t._v(" "),s("ul",[s("li",[t._v("String（字符串）")]),t._v(" "),s("li",[t._v("List（列表）")]),t._v(" "),s("li",[t._v("Hash（字典）")]),t._v(" "),s("li",[t._v("Set（集合）")]),t._v(" "),s("li",[t._v("Sorted Set（有序集合）")])]),t._v(" "),s("h1",{attrs:{id:"_2-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-string"}},[t._v("#")]),t._v(" 2 String")]),t._v(" "),s("p",[t._v("String是简单的key-value 键值对，value不仅可以是String，也可以是数字。String在"),s("a",{attrs:{href:"https://cloud.tencent.com/product/crs?from_column=20065&from=20065",target:"_blank",rel:"noopener noreferrer"}},[t._v("redis"),s("OutboundLink")],1),t._v("内部存储默认就是一个字符串，被redisObject所引用，当遇到incr,decr等操作时会转成数值型进行计算，此时redisObject的encoding字段为int。")]),t._v(" "),s("p",[t._v("String在redis内部存储默认就是一个字符串，被redisObject所引用，当遇到incr,decr等操作时会转成数值型进行计算，此时redisObject的encoding字段为int。")]),t._v(" "),s("h2",{attrs:{id:"_2-1-应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-应用场景"}},[t._v("#")]),t._v(" 2.1 应用场景")]),t._v(" "),s("p",[t._v("String是最常用的一种数据类型，普通的key/value存储都可以归为此类，这里就不所做解释了。")]),t._v(" "),s("h2",{attrs:{id:"_2-2-相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-相关命令"}},[t._v("#")]),t._v(" 2.2 相关命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SET key value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置key=value")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GET key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("或者键key对应的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GETRANGE key start end")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("得到字符串的子字符串存放在一个键")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GETSET key value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置键的字符串值，并返回旧值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GETBIT key offset")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回存储在键位值的字符串值的偏移")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("MGET key1 key2..")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("得到所有的给定键的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SETBIT key offset value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置或清除该位在存储在键的字符串值偏移")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SETEX key seconds value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("键到期时设置值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SETNX key value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置键的值，只有当该键不存在")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SETRANGE key offset value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("覆盖字符串的一部分从指定键的偏移")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("STRLEN key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("得到存储在键的值的长度")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("MSET key value key value...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置多个键和多个值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("MSETNX key value key value...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置多个键多个值，只有在当没有按键的存在时")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("PSETEX key milliseconds value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置键的毫秒值和到期时间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("INCR key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("增加键的整数值一次")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("INCRBY key increment")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("由给定的数量递增键的整数值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("INCRBYFLOAT key increment")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("由给定的数量递增键的浮点值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("DECR key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("递减键一次的整数值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("DECRBY key decrement")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("由给定数目递减键的整数值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("APPEND key value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("追加值到一个键")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("DEL key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果存在删除键")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("DUMP key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回存储在指定键的值的序列化版本")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("EXISTS key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("此命令检查该键是否存在")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("EXPIRE key seconds")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定键的过期时间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("EXPIREAT key timestamp")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定的键过期时间。在这里，时间是在Unix时间戳格式")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("PEXPIRE key milliseconds")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置键以毫秒为单位到期")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("PEXPIREAT key milliseconds-timestamp")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置键在Unix时间戳指定为毫秒到期")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("KEYS pattern")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查找与指定模式匹配的所有键")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("MOVE key db")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("移动键到另一个数据库")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("PERSIST key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("移除过期的键")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("PTTL key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("以毫秒为单位获取剩余时间的到期键。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("TTL key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取键到期的剩余时间。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("RANDOMKEY")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从Redis返回随机键")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("RENAME key newkey")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("更改键的名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("RENAMENX key newkey")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("重命名键，如果新的键不存在")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("TYPE key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回存储在键的数据类型的值。")])])])]),t._v(" "),s("h1",{attrs:{id:"_2-3-使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-使用示例"}},[t._v("#")]),t._v(" 2.3 使用示例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("redis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" baidu http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baidu\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" append baidu "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("com")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" baidu\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com"')]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" visitors "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" incr "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("visitors")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" incr "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("visitors")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" visitors\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" incrby visitors "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" visitors\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"102"')]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" type baidu\nstring\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" type visitors\nstring\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ttl "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("baidu")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" rename baidu baidu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("site\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("baidu")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" baidu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("site\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com"')]),t._v("\n")])])]),s("h1",{attrs:{id:"_3-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-list"}},[t._v("#")]),t._v(" 3 List")]),t._v(" "),s("p",[t._v("Redis列表是简单的字符串列表，可以类比到C++中的std::list，简单的说就是一个链表或者说是一个队列。可以从头部或尾部向Redis列表添加元素。列表的最大长度为2^32 - 1，也即每个列表支持超过40亿个元素。")]),t._v(" "),s("p",[t._v("Redis list的实现为一个双向链表，即可以支持反向查找和遍历，更方便操作，不过带来了部分额外的内存开销，Redis内部的很多实现，包括发送缓冲队列等也都是用的这个数据结构。")]),t._v(" "),s("h2",{attrs:{id:"_3-1-应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-应用场景"}},[t._v("#")]),t._v(" 3.1 应用场景")]),t._v(" "),s("p",[t._v("Redis list的应用场景非常多，也是Redis最重要的数据结构之一，比如twitter的关注列表、粉丝列表等都可以用Redis的list结构来实现，再比如有的应用使用Redis的list类型实现一个简单的轻量级"),s("a",{attrs:{href:"https://cloud.tencent.com/product/cmq?from_column=20065&from=20065",target:"_blank",rel:"noopener noreferrer"}},[t._v("消息队列"),s("OutboundLink")],1),t._v("，生产者push，消费者pop/bpop。")]),t._v(" "),s("h2",{attrs:{id:"_3-2-相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-相关命令"}},[t._v("#")]),t._v(" 3.2 相关命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("BLPOP key1 key2  timeout")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("取出并获取列表中的第一个元素，或阻塞，直到有可用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("BRPOP key1 key2  timeout")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("取出并获取列表中的最后一个元素，或阻塞，直到有可用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("BRPOPLPUSH source destination timeout")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从列表中弹出一个值，它推到另一个列表并返回它;或阻塞，直到有可用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LINDEX key index")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从一个列表其索引获取对应的元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LINSERT key BEFORE/AFTER pivot value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在列表中的其他元素之后或之前插入一个元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LLEN key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取列表的长度")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LPOP key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取并取出列表中的第一个元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LPUSH key value1 value2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在前面加上一个或多个值的列表")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LPUSHX key value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在前面加上一个值列表，仅当列表中存在")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LRANGE key start stop")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从一个列表获取各种元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LREM key count value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从列表中删除元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LSET key index value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在列表中的索引设置一个元素的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LTRIM key start stop")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("修剪列表到指定的范围内")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("RPOP key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("取出并获取列表中的最后一个元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("RPOPLPUSH source destination")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("删除最后一个元素的列表，将其附加到另一个列表并返回它")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("RPUSH key value1 value2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("添加一个或多个值到列表")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("RPUSHX key value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("添加一个值列表，仅当列表中存在")])])])]),t._v(" "),s("h2",{attrs:{id:"_3-3-使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-使用示例"}},[t._v("#")]),t._v(" 3.3 使用示例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("redis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lpush list1 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redis")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lpush list1 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" rpush list1 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("world")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" llen "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("list1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lrange list1 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lpop list1\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" rpop list1\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lrange list1 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis"')]),t._v("\n")])])]),s("h1",{attrs:{id:"_4-hash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-hash"}},[t._v("#")]),t._v(" 4 Hash")]),t._v(" "),s("p",[t._v("类似C#中的dict类型或者C++中的hash_map类型。")]),t._v(" "),s("p",[t._v("Redis Hash对应Value内部实际就是一个HashMap，实际这里会有2种不同实现，这个Hash的成员比较少时Redis为了节省内存会采用类似一维数组的方式来紧凑存储，而不会采用真正的HashMap结构，对应的value redisObject的encoding为zipmap,当成员数量增大时会自动转成真正的HashMap,此时encoding为ht。")]),t._v(" "),s("h2",{attrs:{id:"_4-1-应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-应用场景"}},[t._v("#")]),t._v(" 4.1 应用场景")]),t._v(" "),s("p",[t._v("假设有多个用户及对应的用户信息，可以用来存储以用户ID为key，将用户信息序列化为比如json格式做为value进行保存。")]),t._v(" "),s("h2",{attrs:{id:"_4-2-相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-相关命令"}},[t._v("#")]),t._v(" 4.2 相关命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HDEL key fieldfield...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("删除对象的一个或几个属性域，不存在的属性将被忽略")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HEXISTS key field")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查看对象是否存在该属性域")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HGET key field")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取对象中该field属性域的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HGETALL key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取对象的所有属性域和值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HINCRBY key field value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("将该对象中指定域的值增加给定的value，原子自增操作，只能是integer的属性值可以使用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HINCRBYFLOAT key field increment")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("将该对象中指定域的值增加给定的浮点数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HKEYS key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取对象的所有属性字段")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HVALS key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取对象的所有属性值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HLEN key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取对象的所有属性字段的总数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HMGET key fieldfield...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取对象的一个或多个指定字段的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HSET key field value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置对象指定字段的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HMSET key field value field value ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("同时设置对象中一个或多个字段的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HSETNX key field value")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("只在对象不存在指定的字段时才设置字段的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HSTRLEN key field")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回对象指定field的value的字符串长度，如果该对象或者field不存在，返回0.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HSCAN key cursor MATCH pattern")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("类似SCAN命令")])])])]),t._v(" "),s("h2",{attrs:{id:"_4-3-使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-使用示例"}},[t._v("#")]),t._v(" 4.3 使用示例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hset person name "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jack")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hset person age "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hset person sex "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("famale")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hgetall person\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jack"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sex"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"famale"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hkeys person\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sex"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hvals person\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jack"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"famale"')]),t._v("\n")])])]),s("h1",{attrs:{id:"_5-set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-set"}},[t._v("#")]),t._v(" 5 Set")]),t._v(" "),s("p",[t._v("可以理解为一堆值不重复的列表，类似数学领域中的集合概念，且Redis也提供了针对集合的求交集、并集、差集等操作。")]),t._v(" "),s("p",[t._v("set 的内部实现是一个value永远为null的HashMap，实际就是通过计算hash的方式来快速排重的，这也是set能提供判断一个成员是否在集合内的原因。")]),t._v(" "),s("h2",{attrs:{id:"_5-1-应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-应用场景"}},[t._v("#")]),t._v(" 5.1 应用场景")]),t._v(" "),s("p",[t._v("Redis set对外提供的功能与list类似是一个列表的功能，特殊之处在于set是可以自动排重的，当你需要存储一个列表数据，又不希望出现重复数据时，set是一个很好的选择，并且set提供了判断某个成员是否在一个set集合内的重要接口，这个也是list所不能提供的。")]),t._v(" "),s("p",[t._v("又或者在微博应用中，每个用户关注的人存在一个集合中，就很容易实现求两个人的共同好友功能。")]),t._v(" "),s("h2",{attrs:{id:"_5-2-相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-相关命令"}},[t._v("#")]),t._v(" 5.2 相关命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SADD key member member ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("添加一个或者多个元素到集合(set)里")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SCARD key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取集合里面的元素数量")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SDIFF key key ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获得队列不存在的元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SDIFFSTORE destination key key ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获得队列不存在的元素，并存储在一个关键的结果集")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SINTER key key ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获得两个集合的交集")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SINTERSTORE destination key key ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获得两个集合的交集，并存储在一个集合中")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SISMEMBER key member")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("确定一个给定的值是一个集合的成员")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SMEMBERS key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取集合里面的所有key")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SMOVE source destination member")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("移动集合里面的一个key到另一个集合")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SPOP key count")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取并删除一个集合里面的元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SRANDMEMBER key count")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从集合里面随机获取一个元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SREM key member member ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从集合里删除一个或多个元素，不存在的元素会被忽略")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SUNION key key ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("添加多个set元素")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SUNIONSTORE destination key key ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("合并set元素，并将结果存入新的set里面")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SSCAN key cursor MATCH pattern")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("迭代set里面的元素")])])])]),t._v(" "),s("h2",{attrs:{id:"_5-3-使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-使用示例"}},[t._v("#")]),t._v(" 5.3 使用示例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("redis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SADD")]),t._v(" myset "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SADD")]),t._v(" myset "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SMEMBERS")]),t._v(" myset\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\nredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SADD")]),t._v(" myset "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"one"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SISMEMBER")]),t._v(" myset "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"one"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SISMEMBER")]),t._v(" myset "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"two"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n#使用集合数据结构的典型用例是朋友名单的实现：\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sadd friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("leto ghanima paul chani "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jessica")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sadd friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("duncan paul jessica "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alia")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sismember friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("leto "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jessica")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   #不管一个用户有多少个朋友，我们都能高效地（"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("时间复杂度）识别出用户"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),t._v("是不是用户"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Y")]),t._v("的朋友\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sismember friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("leto "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vladimir")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sinter friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("leto friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("duncan\t#我们可以查看两个或更多的人是不是有共同的朋友\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paul"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jessica"')]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sinterstore friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("leto_duncan friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("leto friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("duncan # "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("可以在一个新的关键字里存储结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),s("h1",{attrs:{id:"_6-sorted-set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-sorted-set"}},[t._v("#")]),t._v(" 6 Sorted Set")]),t._v(" "),s("p",[t._v("Redis有序集合类似Redis集合，不同的是增加了一个功能，即集合是有序的。一个有序集合的每个成员带有分数，用于进行排序。")]),t._v(" "),s("p",[t._v("Redis有序集合添加、删除和测试的时间复杂度均为O(1)(固定时间，无论里面包含的元素集合的数量)。列表的最大长度为2^32- 1元素(4294967295，超过40亿每个元素的集合)。")]),t._v(" "),s("p",[t._v("Redis sorted set的内部使用HashMap和跳跃表(SkipList)来保证数据的存储和有序，HashMap里放的是成员到score的映射，而跳跃表里存放的是所有的成员，排序依据是HashMap里存的score,使用跳跃表的结构可以获得比较高的查找效率，并且在实现上比较简单。")]),t._v(" "),s("h2",{attrs:{id:"_6-1-使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-使用场景"}},[t._v("#")]),t._v(" 6.1 使用场景")]),t._v(" "),s("p",[t._v("Redis sorted set的使用场景与set类似，区别是set不是自动有序的，而sorted set可以通过用户额外提供一个优先级(score)的参数来为成员排序，并且是插入有序的，即自动排序。当你需要一个有序的并且不重复的集合列表，那么可以选择sorted set数据结构，比如twitter 的public timeline可以以发表时间作为score来存储，这样获取时就是自动按时间排好序的。")]),t._v(" "),s("p",[t._v("又比如用户的积分排行榜需求就可以通过有序集合实现。还有上面介绍的使用List实现轻量级的消息队列，其实也可以通过Sorted Set实现有优先级或按权重的队列。")]),t._v(" "),s("h2",{attrs:{id:"_6-2-相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-相关命令"}},[t._v("#")]),t._v(" 6.2 相关命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZADD key score1 member1 score2 member2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("添加一个或多个成员到有序集合，或者如果它已经存在更新其分数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZCARD key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("得到的有序集合成员的数量")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZCOUNT key min max")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("计算一个有序集合成员与给定值范围内的分数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZINCRBY key increment member")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在有序集合增加成员的分数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZINTERSTORE destination numkeys key key ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("多重交叉排序集合，并存储生成一个新的键有序集合")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZLEXCOUNT key min max")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("计算一个给定的字典范围之间的有序集合成员的数量")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZRANGE key start stop WITHSCORES")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("由索引返回一个成员范围的有序集合（从低到高）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZRANGEBYLEX key min max LIMIT offset count")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回一个成员范围的有序集合（由字典范围）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZRANGEBYSCORE key min max WITHSCORES")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回有序集key中，所有 score 值介于 min 和 max 之间(包括等于 min 或 max )的成员，有序集成员按 score 值递增(从小到大)次序排列")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZRANK key member")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("确定成员的索引中有序集合")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZREM key member member ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从有序集合中删除一个或多个成员，不存在的成员将被忽略")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZREMRANGEBYLEX key min max")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("删除所有成员在给定的字典范围之间的有序集合")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZREMRANGEBYRANK key start stop")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在给定的索引之内删除所有成员的有序集合")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZREMRANGEBYSCORE key min max")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在给定的分数之内删除所有成员的有序集合")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZREVRANGE key start stop WITHSCORES")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回一个成员范围的有序集合，通过索引，以分数排序，从高分到低分")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZREVRANGEBYSCORE key max min WITHSCORES")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回一个成员范围的有序集合，以socre排序从高到低")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZREVRANK key member")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("确定一个有序集合成员的索引，以分数排序，从高分到低分")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZSCORE key member")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("获取给定成员相关联的分数在一个有序集合")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZUNIONSTORE destination numkeys key key ...")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("添加多个集排序，所得排序集合存储在一个新的键")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ZSCAN key cursor MATCH pattern")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("增量迭代排序元素集和相关的分数")])])])]),t._v(" "),s("h2",{attrs:{id:"_6-3-使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-使用示例"}},[t._v("#")]),t._v(" 6.3 使用示例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("redis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" zadd dbs "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redis")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" zadd dbs "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("memcached")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" zadd dbs "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mongodb")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" zadd dbs "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("leveldb")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" zcard "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" zcount dbs "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" zrank dbs "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("leveldb")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" zrank dbs "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("other")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" zrangebyscore dbs "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"memcached"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"leveldb"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mongodb"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis"')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);