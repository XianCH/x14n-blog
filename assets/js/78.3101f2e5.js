(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{969:function(t,s,a){"use strict";a.r(s);var e=a(2),_=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"sql备忘录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql备忘录"}},[t._v("#")]),t._v(" sql备忘录")]),t._v(" "),s("h2",{attrs:{id:"绑定外键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定外键"}},[t._v("#")]),t._v(" 绑定外键")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("tb_product_ibfk_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("category_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("tb_product_category"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RESTRICT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RESTRICT")]),t._v("\n")])])]),s("h2",{attrs:{id:"语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[t._v("#")]),t._v(" 语句")]),t._v(" "),s("p",[t._v("绑定主键")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USING")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BTREE")]),t._v("\n")])])]),s("h2",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),s("p",[t._v("B-TREE索引:\tUSING BTREE")]),t._v(" "),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("数值类型 ：")]),t._v(" "),s("p",[s("code",[t._v("tinyint")]),t._v(" -128~127之间的整数")]),t._v(" "),s("p",[s("code",[t._v("smallint")])]),t._v(" "),s("p",[s("code",[t._v("mediumint")])]),t._v(" "),s("p",[s("code",[t._v("int")])]),t._v(" "),s("p",[s("code",[t._v("bigint")])]),t._v(" "),s("p",[t._v("浮点类型 float ， double")])]),t._v(" "),s("li",[s("p",[t._v("字符串类型：")]),t._v(" "),s("p",[s("code",[t._v("varchar")]),t._v(" ，")]),t._v(" "),s("p",[s("code",[t._v("char")]),t._v("，（）中保存一个字节")])]),t._v(" "),s("li",[s("p",[t._v("日期时间类型")]),t._v(" "),s("p",[s("code",[t._v("DATE")])]),t._v(" "),s("p",[s("code",[t._v("TIME")])]),t._v(" "),s("p",[s("code",[t._v("DATETIME")])]),t._v(" "),s("p",[t._v("``TIMESTAMP`。")])]),t._v(" "),s("li",[s("p",[t._v("文本类型 文本类型包括TEXT和BLOB。在MySQL中，TEXT类型包括TINYTEXT、TEXT、MEDIUMTEXT和LONGTEXT，它们的存储方式都是变长存储，可以存储较大的文本数据；而BLOB类型包括TINYBLOB、BLOB、MEDIUMBLOB和LONGBLOB，它们的存储方式也是变长存储，可以存储较大的二进制数据。")])]),t._v(" "),s("li",[s("p",[t._v("枚举类型和集合类型 枚举类型和集合类型是MySQL中特有的类型。枚举类型存储时会将枚举值转换成整数存储，而集合类型存储时则会将多个枚举值组合成一个集合进行存储")])]),t._v(" "),s("li",[s("p",[t._v("精确数值:")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("DECIMAL(M,D)")]),t._v(" M代表多少为数，D代表小数点后几位")])])])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("h2",{attrs:{id:"修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),s("p",[s("code",[t._v("unsigned")]),t._v(" 非负数")]),t._v(" "),s("p",[t._v("时间修饰符："),s("code",[t._v("CURRENT_TIMESTAMP(0)")]),t._v("当前时间 0 表示小数点后面的位数")]),t._v(" "),s("p",[s("code",[t._v("DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0)")])]),t._v(" "),s("h2",{attrs:{id:"编码格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码格式"}},[t._v("#")]),t._v(" 编码格式")]),t._v(" "),s("p",[t._v("在ASCII编码中，每个字符占用1个字节；")]),t._v(" "),s("p",[t._v("在UTF-8编码中，一个英文字符占用1个字节，一个汉字字符占用3个字节；")]),t._v(" "),s("p",[t._v("在UTF-16编码中，一个英文字符占用2个字节，一个汉字字符占用2个或4个字节；在UTF-32编码中，每个字符都占用4个字节。")]),t._v(" "),s("h2",{attrs:{id:"字符排序规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符排序规则"}},[t._v("#")]),t._v(" 字符排序规则")]),t._v(" "),s("p",[s("code",[t._v("CHARACTER SET = utf8 COLLATE = utf8_general_ci")]),t._v("不区分大小写")]),t._v(" "),s("h2",{attrs:{id:"优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),s("p",[s("code",[t._v("ROW_FORMAT")]),t._v("是用于指定表中行的存储格式的一种选项")]),t._v(" "),s("p",[s("code",[t._v("ROW_FORMAT = Dynamic")]),t._v("是一种行格式，MySQL会根据行的大小自动选择行的存储方式，可以是COMPACT或者REDUNDANT。对于比较小的行，MySQL会使用更紧凑的存储方式（COMPACT），而对于较大的行，MySQL会使用更宽松的存储方式（REDUNDANT），以节省存储空间。这种自适应的存储方式可以在一定程度上提高表的存储效率和查询性能")])])}),[],!1,null,null,null);s.default=_.exports}}]);